<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="Show">
    <segment>
      <node>
        <start-node name="Show" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="shadefinder/shadefinder"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Products">
    <segment>
      <node>
        <start-node name="Products" secure="false"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="ok">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="shadefinder/services/products"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="Demo">
    <segment>
      <node>
        <start-node name="Demo" secure="false"/>
        <node-display x="5" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="shadefinder/demo"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Logic">
    <segment>
      <node>
        <start-node name="Logic" secure="false"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="shadefinder/logic"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Cart">
    <segment>
      <node>
        <start-node name="Cart" secure="false"/>
        <node-display x="1" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="shadefinder/services/cart"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Videos">
    <segment>
      <node>
        <start-node name="Videos" secure="false"/>
        <node-display x="3" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.video.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="SearchCustomObject" pipelet-set-identifier="bc_api">
                <config-property key="CaseSensitive" value="false"/>
                <config-property key="CustomObjectType" value="video"/>
                <key-binding alias="SearchResult" key="SearchResult"/>
                <key-binding alias="SearchResultCount" key="SearchResultCount"/>
                <key-binding alias="null" key="Search2Key"/>
                <key-binding alias="null" key="Search3Key"/>
                <key-binding alias="null" key="Search4Key"/>
                <key-binding alias="null" key="Search5Key"/>
                <key-binding alias="null" key="Search2Value"/>
                <key-binding alias="null" key="Search3Value"/>
                <key-binding alias="null" key="Search4Value"/>
                <key-binding alias="null" key="Search5Value"/>
                <key-binding alias="null" key="SortBy1"/>
                <key-binding alias="null" key="SortBy1Direction"/>
                <key-binding alias="null" key="SortBy2"/>
                <key-binding alias="null" key="SortBy2Direction"/>
                <key-binding alias="null" key="SortBy3"/>
                <key-binding alias="null" key="SortBy3Direction"/>
                <key-binding alias="CurrentHttpParameterMap.video.stringValue" key="Search1Value"/>
                <key-binding alias="custom.videoname" key="Search1Key"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="shadefinder/services/video"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="4" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="shadefinder/error"/>
        </interaction-node>
        <node-display x="2" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProduct">
    <segment>
      <node>
        <start-node call-mode="private" name="GetProduct" secure="false"/>
        <node-display x="7" y="5"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="Product.productSet" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <call-node start-name-ref="Product-HandleOfflineSetProducts"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="online">
                      <transition target-connector="in1" target-path="../+2"/>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../../+2"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="4" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="2"/>
            </node>
            <transition target-connector="in3" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-2" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product" key="SelectedProduct"/>
                <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateProductOptionSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="CurrentOptionModel" key="ProductOptionModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="ProductOptionModels" key="ProductOptionModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="error/notfound"/>
        </interaction-node>
        <node-display x="0" y="4"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleOfflineSetProducts">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleOfflineSetProducts" secure="false"/>
        <node-display x="0" y="8"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="false" key="From_0"/>
          <key-binding alias="Online" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <loop-node element-key="SetProduct" iterator-key="Product.getProductSetProducts()"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SetProduct.online" key="From_0"/>
                <key-binding alias="Online" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="Online" condition-operator="expr"/>
              <node-display orientation="horizontal" x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="online"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
